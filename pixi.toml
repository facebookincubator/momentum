[project]
name = "momentum"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]
version = "0.1.0"
description = "A library providing foundational algorithms for human kinematic motion and numerical optimization solvers to apply human motion in various applications"
license = "MIT"
readme = "README.md"
homepage = "https://facebookincubator.github.io/momentum/"
repository = "https://github.com/facebookincubator/momentum"

[build-dependencies]
boost = ">=1.84.0"
c-compiler = ">=1.7.0"
clang-format = ">=18,<19"
cmake = ">=3.23"
cxx-compiler = ">=1.7.0"
gtest = ">=1.15.2"
ninja = ">=1.11.1"
rerun-sdk = ">=0.19,<0.20"
pip = ">=24.0"
pybind11 = ">=2.13.5"
pytest = ">=8.2.0"
scipy = ">=1.13.0"
setuptools = ">=69.5.1"

[dependencies]
blas = ">=1.1"
ceres-solver = ">=2.2.0"
cli11 = ">=2.4.1"
dispenso = ">=1.3.0"
eigen = ">=3.4.0"
ezc3d = ">=1.5.9"
drjit-cpp = ">=0.4.6"
fmt = ">=10.2.1"
fx-gltf = ">=2.0.0"
librerun-sdk = ">=0.19,<0.20"
ms-gsl = ">=4.0.0"
nlohmann_json = ">=3.11"
openfbx = ">=0.9"
openssl = ">=3.2.1"
re2 = ">=2023.9.1"
spdlog = ">=1.12.0"

[tasks]
clean = { cmd = "rm -rf build && rm -rf pymomentum.egg-info && rm -rf .pixi && rm pixi.lock" }
lint = { cmd = "clang-format -i axel/**/*.h axel/**/*.cpp momentum/**/*.h momentum/**/*.cpp pymomentum/**/*.h pymomentum/**/*.cpp" }
config = { cmd = """
    cmake \
        -S . \
        -B build \
        -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DMOMENTUM_BUILD_IO_FBX=$MOMENTUM_BUILD_IO_FBX \
        -DMOMENTUM_BUILD_TESTING=ON \
        -DMOMENTUM_BUILD_EXAMPLES=ON \
        -DMOMENTUM_BUILD_PYMOMENTUM=$MOMENTUM_BUILD_PYMOMENTUM \
        -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD \
        -DMOMENTUM_USE_SYSTEM_GOOGLETEST=ON \
        -DMOMENTUM_USE_SYSTEM_PYBIND11=ON \
        -DMOMENTUM_USE_SYSTEM_RERUN_CPP_SDK=ON
    """, env = { MOMENTUM_BUILD_IO_FBX = "OFF", MOMENTUM_ENABLE_SIMD = "ON", MOMENTUM_BUILD_PYMOMENTUM = "ON" } }
build = { cmd = "cmake --build build -j --target all", depends_on = ["config"] }
test = { cmd = "ctest --test-dir build --output-on-failure", depends_on = [
    "build",
] }
hello_world = { cmd = "build/hello_world", depends_on = ["build"] }
convert_model = { cmd = "build/convert_model", depends_on = ["build"] }
c3d_viewer = { cmd = "build/c3d_viewer", depends_on = ["build"] }
fbx_viewer = { cmd = "build/fbx_viewer", depends_on = ["build"] }
glb_viewer = { cmd = "build/glb_viewer", depends_on = ["build"] }
process_markers = { cmd = "build/process_markers_app", depends_on = ["build"] }
install = { cmd = "cmake --build build -j --target install", depends_on = [
    "build",
] }

#===========
# linux-64
#===========

[target.linux-64.build-dependencies]

[target.linux-64.dependencies]
pytorch = ">=2.4.0"
sysroot_linux-64 = ">=2.28"

[target.linux-64.tasks]
build_pymomentum = { cmd = "pip install -e ." }
test_pymomentum = { cmd = """
    pytest \
        pymomentum/test/test_closest_points.py \
        pymomentum/test/test_fbx.py \
        pymomentum/test/test_parameter_transform.py \
        pymomentum/test/test_quaternion.py \
        pymomentum/test/test_skel_state.py \
        pymomentum/test/test_skeleton.py
    """, env = { MOMENTUM_MODELS_PATH = "momentum/" }, depends_on = [
    "build_pymomentum",
] }

#============
# osx-64
#============

[target.osx.build-dependencies]

[target.osx.dependencies]
pytorch = ">=2.4.0"

[target.osx.tasks]
build = { cmd = "cmake --build build -j --target all", depends_on = ["config"] }
build_pymomentum = { cmd = "pip install -e ." }
test_pymomentum = { cmd = """
    pytest \
        pymomentum/test/test_closest_points.py \
        pymomentum/test/test_fbx.py \
        pymomentum/test/test_parameter_transform.py \
        pymomentum/test/test_quaternion.py \
        pymomentum/test/test_skel_state.py \
        pymomentum/test/test_skeleton.py
    """, env = { MOMENTUM_MODELS_PATH = "momentum/" }, depends_on = [
    "build_pymomentum",
] }

#============
# osx-arm64
#============

[target.osx-arm64.build-dependencies]

[target.osx-arm64.dependencies]
pytorch = ">=2.4.0"

[target.osx-arm64.tasks]
build = { cmd = "cmake --build build -j --target all", depends_on = ["config"] }
build_pymomentum = { cmd = "pip install -e ." }
test_pymomentum = { cmd = """
    pytest \
        pymomentum/test/test_closest_points.py \
        pymomentum/test/test_fbx.py \
        pymomentum/test/test_parameter_transform.py \
        pymomentum/test/test_quaternion.py \
        pymomentum/test/test_skel_state.py \
        pymomentum/test/test_skeleton.py
    """, env = { MOMENTUM_MODELS_PATH = "momentum/" }, depends_on = [
    "build_pymomentum",
] }

#=========
# win-64
#=========

[target.win-64.dependencies]

[target.win-64.tasks]
config = { cmd = """
    cmake \
        -S . \
        -B build \
        -G 'Visual Studio 17 2022' \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DBUILD_SHARED_LIBS=OFF \
        -DMOMENTUM_BUILD_EXAMPLES=ON \
        -DMOMENTUM_BUILD_IO_FBX=$MOMENTUM_BUILD_IO_FBX \
        -DMOMENTUM_BUILD_PYMOMENTUM=$MOMENTUM_BUILD_PYMOMENTUM \
        -DMOMENTUM_BUILD_TESTING=ON \
        -DMOMENTUM_ENABLE_SIMD=%MOMENTUM_ENABLE_SIMD% \
        -DMOMENTUM_USE_SYSTEM_GOOGLETEST=ON \
        -DMOMENTUM_USE_SYSTEM_PYBIND11=ON \
        -DMOMENTUM_USE_SYSTEM_RERUN_CPP_SDK=ON
    """, env = { MOMENTUM_BUILD_IO_FBX = "OFF", MOMENTUM_BUILD_PYMOMENTUM = "OFF", MOMENTUM_ENABLE_SIMD = "ON" } }
open_vs = { cmd = "cmd /c start build\\momentum.sln", depends_on = ["config"] }
build = { cmd = "cmake --build build -j --config Release", depends_on = [
    "config",
] }
test = { cmd = "ctest --test-dir build --output-on-failure --build-config Release", depends_on = [
    "build",
] }
hello_world = { cmd = "build/Release/hello_world.exe", depends_on = ["build"] }
convert_model = { cmd = "build/Release/convert_model.exe", depends_on = [
    "build",
] }
c3d_viewer = { cmd = "build/Release/c3d_viewer.exe", depends_on = ["build"] }
fbx_viewer = { cmd = "build/Release/fbx_viewer.exe", depends_on = ["build"] }
glb_viewer = { cmd = "build/Release/glb_viewer.exe", depends_on = ["build"] }
process_markers = { cmd = "build/Release/process_markers_app.exe", depends_on = [
    "build",
] }
install = { cmd = "cmake --build build -j --target install --config Release", depends_on = [
    "build",
] }

docker_build_base = { cmd = "docker build -t momentum-base -f docker/Dockerfile ." }
docker_run = { cmd = "docker run -it --gpus=all --rm momentum-base" }

#==============
# Feature: CPU
#==============

[feature.cpu]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

#==============
# Feature: GPU
#==============

[feature.py312-cuda120]
channels = ["nvidia", "conda-forge", "pytorch"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies.cuda-toolkit = "12.0.*"
dependencies.pytorch = { version = "2.4.*", build = "cuda120_py312h26b3cf7_301", channel = "conda-forge" }

[feature.py312-cuda118]
channels = ["nvidia", "conda-forge", "pytorch"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies.cuda-toolkit = "12.0.*"
dependencies.pytorch = { version = "2.4.*", build = "cuda118_py312h3690e1b_301", channel = "conda-forge" }

[feature.py311-cuda120]
channels = ["nvidia", "conda-forge", "pytorch"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies.cuda-toolkit = "12.0.*"
dependencies.pytorch = { version = "2.4.*", build = "cuda120_py311hf6aebf0_301", channel = "conda-forge" }

[feature.py311-cuda118]
channels = ["nvidia", "conda-forge", "pytorch"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies.cuda-toolkit = "12.0.*"
dependencies.pytorch = { version = "2.4.*", build = "cuda118_py311h4ee7bbc_301", channel = "conda-forge" }

[feature.py310-cuda120]
channels = ["nvidia", "conda-forge", "pytorch"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies.cuda-toolkit = "12.0.*"
dependencies.pytorch = { version = "2.4.*", build = "cuda120_py310h2c91c31_301", channel = "conda-forge" }

[feature.py310-cuda118]
channels = ["nvidia", "conda-forge", "pytorch"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies.cuda-toolkit = "12.0.*"
dependencies.pytorch = { version = "2.4.*", build = "cuda118_py310h954aa82_301", channel = "conda-forge" }

#==============
# Environments
#==============

[environments]
py312-cuda120 = ["py312-cuda120"] # TODO: Fix pymomentum build
py312-cuda118 = ["py312-cuda118"]
py311-cuda120 = ["py311-cuda120"] # TODO: Fix pymomentum build
py311-cuda118 = ["py311-cuda118"]
py310-cuda120 = ["py310-cuda120"] # TODO: Fix pymomentum build
py310-cuda118 = ["py310-cuda118"]
gpu = ["py312-cuda118"]
cpu = ["cpu"]
default = ["cpu"]
