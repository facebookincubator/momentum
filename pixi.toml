[project]
name = "momentum"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]
version = "0.1.0"
description = "A library providing foundational algorithms for human kinematic motion and numerical optimization solvers to apply human motion in various applications"
license = "MIT"
readme = "README.md"
homepage = "https://facebookincubator.github.io/momentum/"
repository = "https://github.com/facebookincubator/momentum"

[build-dependencies]
boost = ">=1.85.0,<2"
c-compiler = ">=1.8.0,<2"
clang-format = ">=18.1.8,<19"
cmake = ">=3.30.5,<4"
cxx-compiler = ">=1.8.0,<2"
gtest = ">=1.15.2,<2"
ninja = ">=1.12.1,<2"
rerun-sdk = ">=0.19.1,<0.20"
pip = ">=24.3.1,<25"
pybind11 = ">=2.13.6,<3"
pytest = ">=8.3.3,<9"
scipy = ">=1.14.1,<2"
setuptools = ">=75.5.0,<76"

[dependencies]
blas = ">=2.125,<3"
ceres-solver = ">=2.2.0,<3"
cli11 = ">=2.4.2,<3"
dispenso = ">=1.3.0,<2"
eigen = ">=3.4.0,<4"
ezc3d = ">=1.5.17,<2"
drjit-cpp = ">=0.4.6,<0.5"
fmt = ">=11.0.2,<12"
fx-gltf = ">=2.0.0,<3"
librerun-sdk = ">=0.19.1,<0.20"
ms-gsl = ">=4.1.0,<5"
nlohmann_json = ">=3.11.3,<4"
openfbx = ">=0.9,<0.10"
openssl = ">=3.4.0,<4"
re2 = ">=2024.7.2,<2025"
spdlog = ">=1.15.0,<2"

[tasks]
clean = { cmd = """
    rm -rf build \
    && rm -rf .pixi \
    && rm pixi.lock
    """ }
lint = { cmd = "clang-format -i axel/**/*.h axel/**/*.cpp momentum/**/*.h momentum/**/*.cpp pymomentum/**/*.h pymomentum/**/*.cpp" }
config = { cmd = """
    cmake \
        -S . \
        -B build/$PIXI_ENVIRONMENT_NAME/cpp/release \
        -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DMOMENTUM_BUILD_IO_FBX=$MOMENTUM_BUILD_IO_FBX \
        -DMOMENTUM_BUILD_TESTING=ON \
        -DMOMENTUM_BUILD_EXAMPLES=ON \
        -DMOMENTUM_BUILD_PYMOMENTUM=$MOMENTUM_BUILD_PYMOMENTUM \
        -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD \
        -DMOMENTUM_USE_SYSTEM_GOOGLETEST=ON \
        -DMOMENTUM_USE_SYSTEM_PYBIND11=ON \
        -DMOMENTUM_USE_SYSTEM_RERUN_CPP_SDK=ON
    """, env = { MOMENTUM_BUILD_IO_FBX = "OFF", MOMENTUM_ENABLE_SIMD = "ON", MOMENTUM_BUILD_PYMOMENTUM = "ON" } }
config_dev = { cmd = """
    cmake \
        -S . \
        -B build/$PIXI_ENVIRONMENT_NAME/cpp/debug \
        -G Ninja \
        -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DMOMENTUM_BUILD_IO_FBX=$MOMENTUM_BUILD_IO_FBX \
        -DMOMENTUM_BUILD_TESTING=ON \
        -DMOMENTUM_BUILD_EXAMPLES=ON \
        -DMOMENTUM_BUILD_PYMOMENTUM=$MOMENTUM_BUILD_PYMOMENTUM \
        -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD \
        -DMOMENTUM_USE_SYSTEM_GOOGLETEST=ON \
        -DMOMENTUM_USE_SYSTEM_PYBIND11=ON \
        -DMOMENTUM_USE_SYSTEM_RERUN_CPP_SDK=ON
    """, env = { MOMENTUM_BUILD_IO_FBX = "OFF", MOMENTUM_ENABLE_SIMD = "ON", MOMENTUM_BUILD_PYMOMENTUM = "ON" } }
build = { cmd = "cmake --build build/$PIXI_ENVIRONMENT_NAME/cpp/release -j --target all", depends_on = [
    "config",
] }
build_dev = { cmd = "cmake --build build/$PIXI_ENVIRONMENT_NAME/cpp/debug -j --target all", depends_on = [
    "config_dev",
] }
test = { cmd = "ctest --test-dir build/$PIXI_ENVIRONMENT_NAME/cpp/release --output-on-failure", depends_on = [
    "build",
] }
test_dev = { cmd = "ctest --test-dir build/$PIXI_ENVIRONMENT_NAME/cpp/debug --output-on-failure", depends_on = [
    "build_dev",
] }
hello_world = { cmd = "build/hello_world", depends_on = ["build"] }
convert_model = { cmd = "build/convert_model", depends_on = ["build"] }
c3d_viewer = { cmd = "build/c3d_viewer", depends_on = ["build"] }
fbx_viewer = { cmd = "build/fbx_viewer", depends_on = ["build"] }
glb_viewer = { cmd = "build/glb_viewer", depends_on = ["build"] }
process_markers = { cmd = "build/process_markers_app", depends_on = ["build"] }
refine_motion = { cmd = "build/refine_motion", depends_on = ["build"] }
install = { cmd = "cmake --build build/$PIXI_ENVIRONMENT_NAME/cpp/release -j --target install", depends_on = [
    "build",
] }

#===========
# linux-64
#===========

[target.linux-64.build-dependencies]
nvtx-c = ">=3.1.0" # TODO: Add to pytorch as run dep

[target.linux-64.dependencies]
pytorch = ">=2.4.0"
sysroot_linux-64 = ">=2.28"

[target.linux-64.tasks]
# TODO: Check sha256 of fbx202037_fbxsdk_linux
install_fbxsdk = { cmd = """
    mkdir -p .deps \
        && curl -fsSL https://damassets.autodesk.net/content/dam/autodesk/www/files/fbx202037_fbxsdk_gcc_linux.tar.gz -o .deps/fbx_sdk.tar.gz \
        && mkdir -p .deps/fbxsdk_download \
        && tar -xzf .deps/fbx_sdk.tar.gz -C .deps/fbxsdk_download \
        && rm .deps/fbx_sdk.tar.gz \
        && chmod ugo+x .deps/fbxsdk_download/fbx202037_fbxsdk_linux \
        && mkdir -p .deps/fbxsdk/2020.3.7 \
        && yes yes | .deps/fbxsdk_download/fbx202037_fbxsdk_linux .deps/fbxsdk/2020.3.7 \
        && rm -rf .deps/fbxsdk_download/fbx202037_fbxsdk_linux
""", outputs = [
    ".deps/fbxsdk/2020.3.7",
] }
install_deps = { depends_on = ["install_fbxsdk"] }
config = { cmd = """
    cmake \
        -S . \
        -B build/$PIXI_ENVIRONMENT_NAME/cpp/release \
        -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DMOMENTUM_BUILD_IO_FBX=ON \
        -DMOMENTUM_BUILD_TESTING=ON \
        -DMOMENTUM_BUILD_EXAMPLES=ON \
        -DMOMENTUM_BUILD_PYMOMENTUM=$MOMENTUM_BUILD_PYMOMENTUM \
        -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD \
        -DMOMENTUM_USE_SYSTEM_GOOGLETEST=ON \
        -DMOMENTUM_USE_SYSTEM_PYBIND11=ON \
        -DMOMENTUM_USE_SYSTEM_RERUN_CPP_SDK=ON
    """, env = { FBXSDK_PATH = ".deps/fbxsdk", MOMENTUM_ENABLE_SIMD = "ON", MOMENTUM_BUILD_PYMOMENTUM = "ON" }, depends_on = [
    "install_deps",
] }
config_dev = { cmd = """
    cmake \
        -S . \
        -B build/$PIXI_ENVIRONMENT_NAME/cpp/debug \
        -G Ninja \
        -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DMOMENTUM_BUILD_IO_FBX=ON \
        -DMOMENTUM_BUILD_TESTING=ON \
        -DMOMENTUM_BUILD_EXAMPLES=ON \
        -DMOMENTUM_BUILD_PYMOMENTUM=$MOMENTUM_BUILD_PYMOMENTUM \
        -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD \
        -DMOMENTUM_USE_SYSTEM_GOOGLETEST=ON \
        -DMOMENTUM_USE_SYSTEM_PYBIND11=ON \
        -DMOMENTUM_USE_SYSTEM_RERUN_CPP_SDK=ON
    """, env = { FBXSDK_PATH = ".deps/fbxsdk", MOMENTUM_ENABLE_SIMD = "ON", MOMENTUM_BUILD_PYMOMENTUM = "ON" }, depends_on = [
    "install_deps",
] }
build_py = { cmd = "pip install . -vv", env = { FBXSDK_PATH = ".deps/fbxsdk", CMAKE_ARGS = """
    -DMOMENTUM_BUILD_IO_FBX=ON \
    -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD
""", MOMENTUM_ENABLE_SIMD = "ON" }, depends_on = [
    "install_deps",
] }
test_py = { cmd = """
    pytest \
        pymomentum/test/test_closest_points.py \
        pymomentum/test/test_fbx.py \
        pymomentum/test/test_parameter_transform.py \
        pymomentum/test/test_quaternion.py \
        pymomentum/test/test_skel_state.py \
        pymomentum/test/test_skeleton.py
    """, env = { MOMENTUM_MODELS_PATH = "momentum/" }, depends_on = [
    "build_py",
] }

#============
# osx-64
#============

[target.osx.build-dependencies]

[target.osx.dependencies]
pytorch = ">=2.4.0"

[target.osx.tasks]
build_py = { cmd = "pip install . -vv", env = { CMAKE_ARGS = """
    -DMOMENTUM_BUILD_IO_FBX=$MOMENTUM_BUILD_IO_FBX \
    -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD
""", MOMENTUM_BUILD_IO_FBX = "OFF", MOMENTUM_ENABLE_SIMD = "ON" } }
test_py = { cmd = """
    pytest \
        pymomentum/test/test_closest_points.py \
        pymomentum/test/test_fbx.py \
        pymomentum/test/test_parameter_transform.py \
        pymomentum/test/test_quaternion.py \
        pymomentum/test/test_skel_state.py \
        pymomentum/test/test_skeleton.py
    """, env = { MOMENTUM_MODELS_PATH = "momentum/" }, depends_on = [
    "build_py",
] }

#============
# osx-arm64
#============

[target.osx-arm64.build-dependencies]

[target.osx-arm64.dependencies]
pytorch = ">=2.4.0"

[target.osx-arm64.tasks]
build_py = { cmd = "pip install . -vv", env = { CMAKE_ARGS = """
    -DMOMENTUM_BUILD_IO_FBX=$MOMENTUM_BUILD_IO_FBX \
    -DMOMENTUM_ENABLE_SIMD=$MOMENTUM_ENABLE_SIMD
""", MOMENTUM_BUILD_IO_FBX = "OFF", MOMENTUM_ENABLE_SIMD = "ON" } }
test_py = { cmd = """
    pytest \
        pymomentum/test/test_closest_points.py \
        pymomentum/test/test_fbx.py \
        pymomentum/test/test_parameter_transform.py \
        pymomentum/test/test_quaternion.py \
        pymomentum/test/test_skel_state.py \
        pymomentum/test/test_skeleton.py
    """, env = { MOMENTUM_MODELS_PATH = "momentum/" }, depends_on = [
    "build_py",
] }

#=========
# win-64
#=========

[target.win-64.dependencies]

[target.win-64.tasks]
config = { cmd = """
    cmake \
        -S . \
        -B build/$PIXI_ENVIRONMENT_NAME/cpp \
        -G 'Visual Studio 17 2022' \
        -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
        -DBUILD_SHARED_LIBS=OFF \
        -DMOMENTUM_BUILD_EXAMPLES=ON \
        -DMOMENTUM_BUILD_IO_FBX=$MOMENTUM_BUILD_IO_FBX \
        -DMOMENTUM_BUILD_PYMOMENTUM=$MOMENTUM_BUILD_PYMOMENTUM \
        -DMOMENTUM_BUILD_TESTING=ON \
        -DMOMENTUM_ENABLE_SIMD=%MOMENTUM_ENABLE_SIMD% \
        -DMOMENTUM_USE_SYSTEM_GOOGLETEST=ON \
        -DMOMENTUM_USE_SYSTEM_PYBIND11=ON \
        -DMOMENTUM_USE_SYSTEM_RERUN_CPP_SDK=ON
    """, env = { MOMENTUM_BUILD_IO_FBX = "OFF", MOMENTUM_BUILD_PYMOMENTUM = "OFF", MOMENTUM_ENABLE_SIMD = "ON" } }
open_vs = { cmd = "cmd /c start build\\$PIXI_ENVIRONMENT_NAME\\cpp\\momentum.sln", depends_on = [
    "config",
] }
build = { cmd = "cmake --build build/$PIXI_ENVIRONMENT_NAME/cpp -j --config Release", depends_on = [
    "config",
] }
build_dev = { cmd = "cmake --build build/$PIXI_ENVIRONMENT_NAME/cpp -j --config Debug", depends_on = [
    "config",
] }
test = { cmd = "ctest --test-dir build/$PIXI_ENVIRONMENT_NAME/cpp --output-on-failure --build-config Release", depends_on = [
    "build",
] }
test_dev = { cmd = "ctest --test-dir build/$PIXI_ENVIRONMENT_NAME/cpp --output-on-failure --build-config Debug", depends_on = [
    "build_dev",
] }
hello_world = { cmd = "build/$PIXI_ENVIRONMENT_NAME/cpp/Release/hello_world.exe", depends_on = [
    "build",
] }
convert_model = { cmd = "build/$PIXI_ENVIRONMENT_NAME/cpp/Release/convert_model.exe", depends_on = [
    "build",
] }
c3d_viewer = { cmd = "build/$PIXI_ENVIRONMENT_NAME/cpp/Release/c3d_viewer.exe", depends_on = [
    "build",
] }
fbx_viewer = { cmd = "build/$PIXI_ENVIRONMENT_NAME/cpp/Release/fbx_viewer.exe", depends_on = [
    "build",
] }
glb_viewer = { cmd = "build/$PIXI_ENVIRONMENT_NAME/cpp/Release/glb_viewer.exe", depends_on = [
    "build",
] }
process_markers = { cmd = "build/$PIXI_ENVIRONMENT_NAME/cpp/Release/process_markers_app.exe", depends_on = [
    "build",
] }
refine_motion = { cmd = "build/$PIXI_ENVIRONMENT_NAME/cpp/Release/refine_motion.exe", depends_on = [
    "build",
] }
install = { cmd = "cmake --build build/$PIXI_ENVIRONMENT_NAME/cpp -j --target install --config Release", depends_on = [
    "build",
] }

#==============
# Feature: CPU
#==============

[feature.cpu]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

#==============
# Feature: GPU
#==============

[feature.py312-cuda126]
channels = ["conda-forge"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies = { cuda-toolkit = "12.*", pytorch = { version = "2.5.*", build = "cuda126_py312*", channel = "conda-forge" } }

[feature.py311-cuda126]
channels = ["conda-forge"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies = { cuda-toolkit = "12.*", pytorch = { version = "2.5.*", build = "cuda126_py311*", channel = "conda-forge" } }

[feature.py310-cuda126]
channels = ["conda-forge"]
platforms = ["linux-64"]
system-requirements = { cuda = "12.0" }
channel-priority = "disabled"
dependencies = { cuda-toolkit = "12.*", pytorch = { version = "2.5.*", build = "cuda126_py310*", channel = "conda-forge" } }

#==============
# Environments
#==============

[environments]
py312-cuda126 = ["py312-cuda126"]
py311-cuda126 = ["py311-cuda126"]
py310-cuda126 = ["py310-cuda126"]
gpu = ["py312-cuda126"]
cpu = ["cpu"]
default = ["cpu"]
